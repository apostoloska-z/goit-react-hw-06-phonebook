{"version":3,"sources":["Components/Section/Section.js","redux/actions.js","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Section","title","children","className","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","updateFilter","ContactForm","state","nameInputId","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","required","onChange","Component","connect","dispatch","ContactItem","deleteHandler","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","contactId","map","Filter","defaultProps","App","createReducer","action","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5f0df97e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport \"./Section.scss\"\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__title\">{title}</h2>\r\n        {children}\r\n\r\n    </section>\r\n)\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => {\r\n    return {\r\n        payload: {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        },\r\n    }\r\n});\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const updateFilter = createAction('contacts/filter');\r\n\r\n\r\n\r\n\r\n\r\n// import { types } from './types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     },\r\n// })\r\n\r\n// export const deleteContact = contactId => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// })\r\n\r\n// export const updateFilter = value => ({\r\n//     type: types.FILTER,\r\n//     payload: value,\r\n// })","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport {addContact} from '../../redux/actions'\r\nimport \"./ContactForm.scss\"\r\n\r\nclass ContactForm extends Component  {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n        \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n         \r\n    }\r\n    \r\n    reset = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                <label className=\"form__element\" htmlFor={this.nameInputId}>\r\n                    <span className=\"input__title\">Name</span>\r\n                <input className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value = {this.state.name}\r\n                    onChange = {this.handleChange}\r\n                    id = {this.nameInputId}\r\n                />\r\n            </label>\r\n                <label className=\"form__element\" htmlFor={this.numberInputId}>\r\n                    <span className=\"input__title\">Number</span>    \r\n                <input className=\"input\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value = {this.state.number}\r\n                    onChange = {this.handleChange}\r\n                    id = {this.numberInputId}\r\n                />\r\n            </label>\r\n            <button className=\"button\" type=\"submit\"> Add contact</button>\r\n        </form>\r\n        )\r\n    }    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: ({name, number}) => dispatch(addContact({name, number}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from 'prop-types';\r\nimport \"./ContactItem.scss\"\r\n\r\nconst ContactItem = ({ name, number, id, deleteHandler }) => (\r\n    <>\r\n        <span className=\"contact-item__data\">\r\n            {name} : {number}\r\n        </span>\r\n        <button\r\n            onClick={()=>deleteHandler(id)} \r\n            type=\"button\"\r\n            className=\"button\"\r\n        >Delete</button>\r\n    </>\r\n)\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    deleteHandler: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactItem;","import PropTypes from 'prop-types';\r\nimport ContactItem from \"../ContactItem\";\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport \"./ContactList.scss\"\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => (\r\n    <ul className=\"contact-list\">\r\n        {contacts.map((contact) => (\r\n            \r\n            <li className=\"contact-list__item\" key={contact.id}>\r\n                <ContactItem\r\n                    name={contact.name}\r\n                    number={contact.number}\r\n                    id={contact.id}\r\n                    deleteHandler={deleteHandler}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteHandler: PropTypes.func.isRequired,\r\n}\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteHandler: (contactId) => dispatch(deleteContact(contactId)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { updateFilter } from '../../redux/actions';\r\nimport \"./Filter.scss\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className=\"input__title\"> Filter contacts by name\r\n        <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={value}\r\n            name=\"filter\"\r\n            onChange={onChange}\r\n        >\r\n        </input>\r\n    </label>\r\n)\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (event) => dispatch(updateFilter(event.target.value)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Section from \"./Components/Section\";\nimport ContactForm from \"./Components/ContactForm\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport \"./styles.scss\";\n\n\nexport const App = () => {\n  return (\n          <>\n        <Section title=\"Phonebook\">\n          <ContactForm/>\n        </Section>\n          \n        <Section title=\"Contacts\">\n          <Filter/>\n          <ContactList/>\n        </Section>\n      </>\n  )\n}\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, updateFilter } from './actions';\r\n\r\nconst items = createReducer([\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n], {\r\n    [addContact]: (state, action) => [...state, action.payload],\r\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\r\n}\r\n);\r\n\r\nconst filter = createReducer('', {\r\n    [updateFilter]: (_, action) => action.payload,\r\n});\r\n\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers } from 'redux';\r\n// import { types } from './types';\r\n\r\n// const items = (state = [\r\n//       {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//       {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//       {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//       {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n//     ], {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n//         case types.DELETE:\r\n//             return state.filter(contact => contact.id !== payload);\r\n      \r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n\r\n// }\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//             return state;    \r\n//     }\r\n// }\r\n\r\n// export default combineReducers({items, filter});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer)\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);;\r\n\r\n\r\n\r\n\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReducer from './reducer'\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer,\r\n// })\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}> \n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}